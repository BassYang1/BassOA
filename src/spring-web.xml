<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-4.1.xsd 
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context-4.1.xsd 
      http://www.springframework.org/schema/mvc
      http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd">

	<!-- context:component-scan默认使用RequestMappingHandlerMapping和RequestMappingHandlerAdapter，可不配置 -->
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" />
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<!-- 解决@ResponseBody中文乱码 -->  
		<property name="messageConverters">  
            <list>  
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
                <bean class="org.springframework.http.converter.StringHttpMessageConverter">  
                    <property name="writeAcceptCharset" value="false" /> <!--  用于避免响应头过大  -->  
                    <property name="supportedMediaTypes">  
                        <list>  
	                        <value>text/plain;charset=utf-8</value>  
	                        <value>text/html;charset=UTF-8</value>  
                            <value>application/json;charset=UTF-8</value>  
                        </list>  
                    </property>  
                </bean>    
            </list>  
        </property> 
	</bean>
	
	<mvc:annotation-driven />

	<!-- <bean class="com.bass.oa.controller.UserController" /> -->
	<context:component-scan base-package="com.bass.oa.controller,com.bass.wxin.controller">
		<!-- 添加自动扫描过滤: 使用了@Controller注解的bean -->
		<!-- <context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" /> -->
	</context:component-scan>
	
	<!-- 无需handler处理的页面 -->
	<mvc:view-controller path="/index.do" view-name="index" />
	
	<!-- model 验证 -->
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
		<!-- 不设置，则默认为classpath下的 ValidationMessages.properties -->
		<property name="validationMessageSource" ref="messageSource" />
	</bean>
	
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<!-- 解决国际化资源中文乱码 -->
		<property name="defaultEncoding">
	        <value>UTF-8</value>
	    </property>
		<!-- 国际化信息所在的文件名: 文件夹.文件前缀 -->
		<!-- 默认使用messages/messages.properties文件 -->
		<!-- <property name="basename" value="messages.labels" /> -->
		<property name="basenames" value="resource.labels" />
		<!-- 如果在国际化资源文件中找不到对应代码的信息，就用这个代码作为名称 -->
		<property name="useCodeAsDefaultMessage" value="true" />
	</bean>
	
	<!-- 在用户区域固定不需要更改的环境中，可以设置固定的默认的区域语言 -->  
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.FixedLocaleResolver">  
	    <!-- <property name="defaultLocale" value="en_US" /> -->
	    <property name="defaultLocale" value="zh_CN" />
	</bean>
	
	<!-- 需要在界面上进行切换（session方式） --> 
      <!-- <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver"> 
          会话属性不存在,默认属性设置 
          <property name="defaultLocale" value="zh_CN" />
      </bean> -->
	<!-- 引入资源文件件，mvc:resources要和mvc:annotation-driven一起使用 -->
	<!-- <mvc:annotation-driven />
	<mvc:resources mapping="/content/**" location="/WEB-INF/content/" /> -->

	<!-- 启用default servlet来处理资源文件，mvc:default-servlet-handler 要和mvc:annotation-driven一起使用 -->
	<!-- 使用就是各个 Servlet 容器(tomcat, jboss等)自己的默认 Servlet -->
	<!-- <mvc:annotation-driven />
	<mvc:default-servlet-handler /> -->

	

	<mvc:interceptors>	
		<!-- 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 -->
		<!-- <bean class="com.bass.oa.filter.AuthorizationInterceptor">
			<property name="userService">
				<ref bean="userService" />
			</property>
		</bean> -->
		<bean class="com.bass.oa.filter.CommonInterceptor" />
		
	 	<!-- 国际化操作拦截器 如果采用基于（请求/Session/Cookie）则必需配置 --> 
	    <!-- <bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
            <property name="paramName" value="lang"/>
        </bean> -->
		
		<mvc:interceptor>
			<mvc:mapping path="/**" />

			<!-- 排除不需要拦截的请求 -->
			<mvc:exclude-mapping path="/user/logout.do" />
			<mvc:exclude-mapping path="/user/forgetPwd.do" />
			<mvc:exclude-mapping path="/user/sendCaptcha4Pwd.do" />
			<mvc:exclude-mapping path="/**/test.do" />
			<!-- 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的 -->
			<!-- 1) 手动注入bean -->
			<!-- <bean class="com.bass.oa.filter.AuthorizationInterceptor">
				<property name="userService">
					<ref bean="userService" />
				</property>
			</bean> -->

			<!-- 2) 自动装载bean(@Autowired) -->
			<bean class="com.bass.oa.filter.AuthorizationInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>

	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/pages/" />
		<property name="suffix" value=".jsp" />
	</bean>

</beans>